rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isValidImage() {
      return request.resource.contentType.matches('image/.*') &&
             request.resource.size < 10 * 1024 * 1024; // 10MB limit
    }

    function isValidDocument() {
      return request.resource.contentType.matches('application/pdf') ||
             request.resource.contentType.matches('image/.*') ||
             request.resource.contentType.matches('text/.*') ||
             request.resource.size < 25 * 1024 * 1024; // 25MB limit
    }

    function isValidAudioVideo() {
      return request.resource.contentType.matches('audio/.*') ||
             request.resource.contentType.matches('video/.*') ||
             request.resource.size < 500 * 1024 * 1024; // 500MB limit
    }

    // Default bucket - general storage
    match /{allPaths=**} {
      allow read: if true; // Public read access
      allow write: if false; // No public write access
    }

    // Profile images bucket
    match /b/{projectId}-profile-images/o {
      // User profile images
      match /users/{userId}/profile/{fileName} {
        allow read: if true; // Public read for profile images
        allow create: if isOwner(userId) && isValidImage();
        allow update, delete: if isOwner(userId);
      }

      // Astrologer profile images
      match /astrologers/{astrologerId}/profile/{fileName} {
        allow read: if true; // Public read for astrologer profiles
        allow create, update, delete: if isAuthenticated() &&
          request.auth.token.admin == true;
      }
    }

    // Reports bucket
    match /b/{projectId}-reports/o {
      // Astrology reports and charts
      match /users/{userId}/reports/{reportType}/{fileName} {
        allow read: if isOwner(userId);
        allow create: if isOwner(userId) && isValidDocument();
        allow update, delete: if isOwner(userId);
      }

      // Marriage compatibility reports
      match /users/{userId}/marriage-matches/{matchId}/{fileName} {
        allow read: if isOwner(userId);
        allow create: if isOwner(userId) && isValidDocument();
        allow update, delete: if isOwner(userId);
      }

      // Birth chart images
      match /users/{userId}/birth-charts/{chartId}/{fileName} {
        allow read: if isOwner(userId);
        allow create: if isOwner(userId) && isValidImage();
        allow update, delete: if isOwner(userId);
      }
    }

    // Consultations bucket
    match /b/{projectId}-consultations/o {
      // Consultation recordings (audio/video)
      match /consultations/{consultationId}/recordings/{fileName} {
        allow read: if isAuthenticated() &&
          (resource.metadata.owner == request.auth.uid ||
           resource.metadata.astrologerId == request.auth.uid);
        allow create: if isAuthenticated() && isValidAudioVideo();
        allow update, delete: if isAuthenticated() &&
          (resource.metadata.owner == request.auth.uid ||
           resource.metadata.astrologerId == request.auth.uid);
      }

      // Consultation notes and documents
      match /consultations/{consultationId}/documents/{fileName} {
        allow read: if isAuthenticated() &&
          (resource.metadata.owner == request.auth.uid ||
           resource.metadata.astrologerId == request.auth.uid);
        allow create: if isAuthenticated() && isValidDocument();
        allow update, delete: if isAuthenticated() &&
          (resource.metadata.owner == request.auth.uid ||
           resource.metadata.astrologerId == request.auth.uid);
      }

      // Shared consultation materials
      match /consultations/{consultationId}/shared/{fileName} {
        allow read: if isAuthenticated() &&
          (resource.metadata.owner == request.auth.uid ||
           resource.metadata.astrologerId == request.auth.uid);
        allow create: if isAuthenticated() && isValidDocument();
        allow update, delete: if isAuthenticated() &&
          (resource.metadata.owner == request.auth.uid ||
           resource.metadata.astrologerId == request.auth.uid);
      }
    }

    // Default project bucket (appspot.com)
    match /b/{projectId}.appspot.com/o {
      // Public assets (logos, icons, etc.)
      match /public/{allPaths=**} {
        allow read: if true;
        allow write: if false;
      }

      // App assets and resources
      match /assets/{allPaths=**} {
        allow read: if true;
        allow write: if isAuthenticated() && request.auth.token.admin == true;
      }

      // Temporary uploads (for processing)
      match /temp/{userId}/{fileName} {
        allow read: if isOwner(userId);
        allow create: if isOwner(userId) && isValidDocument();
        allow update, delete: if isOwner(userId);
      }

      // Backup files (admin only)
      match /backups/{allPaths=**} {
        allow read, write: if isAuthenticated() && request.auth.token.admin == true;
      }
    }

    // Security: Block all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}